// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShipbuData;

#nullable disable

namespace MigrationsMySQL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShipbuData.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportAcademyVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionTr")
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportAcademyVideos", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportDistrict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAmazonDepot")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("TransportDistricts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Eastern USA",
                            NameTr = "Doğu Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Central USA",
                            NameTr = "Merkez Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Western USA",
                            NameTr = "Batı Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "ONT8",
                            NameTr = "ONT8",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LGB8",
                            NameTr = "LGB8",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LAX9",
                            NameTr = "LAX9",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD1",
                            NameTr = "SBD1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SCK4",
                            NameTr = "SCK4",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SMF3",
                            NameTr = "SMF3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("80ff3e90-dcb9-4bc3-9590-e3a2c331a0ec"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "VGT3",
                            NameTr = "VGT2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "GYR2",
                            NameTr = "GYR2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "GYR3",
                            NameTr = "GYR3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LAS1",
                            NameTr = "LAS1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SJC7",
                            NameTr = "SJC7",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "KRB1",
                            NameTr = "KRB1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "KRB4",
                            NameTr = "KRB4",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD2",
                            NameTr = "SBD2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD3",
                            NameTr = "SBD3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "FTW1",
                            NameTr = "FTW1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("573da713-55b6-4505-9bb0-1e033f7c47e5"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Vancouver YVR",
                            NameTr = "Vancouver YVR",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("637a3cf8-e91a-4e46-8ccf-d1bfcbaa19e3"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Calgary YYC",
                            NameTr = "Calgary YYC",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("82060812-b989-4340-bd2e-8840585a8acf"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Calgary YEG",
                            NameTr = "Calgary YEG",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("545149ad-862b-4e00-a5d6-e3492d68463b"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YYZ",
                            NameTr = "Toronto YYZ",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("829f6814-b1a3-43f0-8d71-f2ea928e743b"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Ottawa YOW",
                            NameTr = "Ottawa YOW",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("ff9e1ee3-91cc-404f-ae3f-4a4c8ad891f7"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Ottawa YUL",
                            NameTr = "Ottawa YUL",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("431d73fb-827d-43c2-8ee3-98568d1cfcf8"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Bussiness Private Address",
                            NameTr = "Kurumsal/Bireysel Adres",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("9495dd9f-53c2-41c5-8680-34539a483a42"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Edmonton YEG1",
                            NameTr = "Edmonton YEG1",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("de1cfc73-52a1-4c72-aed7-1c67a588e436"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YOO",
                            NameTr = "Toronto YOO",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("bb88a4e3-a99f-45e4-a753-cb430b608a4f"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YHM",
                            NameTr = "Toronto YHM",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("a42ea92c-d563-4eb8-bd25-83a3ac1217dc"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Vancouver YXX",
                            NameTr = "Vancouver YXX",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("e7a610f5-1fe9-41e2-8493-34424d982b9b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "UK",
                            NameTr = "İngiltere",
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321")
                        },
                        new
                        {
                            Id = new Guid("cb7fa78d-6de7-4838-9e54-c279bea798b0"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Germany",
                            NameTr = "Almanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("78587899-2653-4be7-b07e-13a7596d5649"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "France",
                            NameTr = "Fransa",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e1371a95-daa6-4c22-8bcd-c86e5ee03203"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Poland",
                            NameTr = "Polonya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("cb39b0c9-34bb-4f55-a39b-a575aff157b2"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Czech Rep.",
                            NameTr = "Çekya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("660348c5-b814-42bf-a1b9-df56696f3c75"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Belgium",
                            NameTr = "Belçika",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("38df3f9b-f88b-4c6d-9a36-76fe0d3e1792"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Austria",
                            NameTr = "Avusturya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("8603813c-d724-4d63-8013-c273c9fe5fbc"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Luxembourg",
                            NameTr = "Lüksemburg",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("7ddb170b-5696-4abe-a5a8-b6424a966ba9"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Spain",
                            NameTr = "İspanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("8b08542b-6c77-4d8e-8d54-329ceec6c1e1"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Italy",
                            NameTr = "İtalya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("52e63491-43b4-47cc-b53e-8384aac7c07c"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Netherlands",
                            NameTr = "Hollanda",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("58a45e41-a7fe-4dec-9a8e-3bbf38455e5f"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Greece",
                            NameTr = "Yunanistan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("ee896fe1-1434-4136-a70e-d2c9fa49d902"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Denmark",
                            NameTr = "Danimarka",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("3c4fedcc-eaeb-4480-8574-c759e9aa2f9d"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Sweden",
                            NameTr = "İsveç",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("da5d4f5e-79ac-4b69-b0f5-cf027053ec8c"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Finland",
                            NameTr = "Fillandiya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("bc3767bc-68d7-400d-ae61-707fc3bb5878"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Slovakia",
                            NameTr = "Slovakya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("291c8b1e-1eb6-4bc0-b714-86e79ed31316"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Slovenia",
                            NameTr = "Slovenya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("6de69db5-e0a5-4fe3-95a9-df3721f50d0b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Hungary",
                            NameTr = "Macaristan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e7b21a66-1c15-49cf-9ff9-c8b3455ba57d"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Portugal",
                            NameTr = "Portekiz",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e7777c20-3abb-4a39-af05-11fcee8f7534"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Croatia",
                            NameTr = "Hırvatistan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("b93226d5-2642-4705-99ca-734af02c624b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Estonia",
                            NameTr = "Estonya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("da7b0a60-d6ca-44d4-9e28-d5d804cd7a64"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Latvia",
                            NameTr = "Latviya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("869993cb-ccd8-498f-880c-97f0e02f2846"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Bulgaria",
                            NameTr = "Bulgaristan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("18351822-a469-408c-b8a9-f17dbff1020a"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Monaco",
                            NameTr = "Monako",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("803e5fb5-2a8f-4e42-a544-071b0b9fcecf"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Ireland",
                            NameTr = "Irlanda",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("3a52e207-c517-49a2-98d4-2998f29f1ecd"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Romania",
                            NameTr = "Romanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportFee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("MaxWeight")
                        .HasColumnType("int");

                    b.Property<Guid>("MethodId")
                        .HasColumnType("char(36)");

                    b.Property<int>("MinWeight")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("MethodId");

                    b.ToTable("TransportFees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("63cc41c7-b9a1-48e3-a5ec-0b90879b8b87"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("df950df4-db2a-4503-8398-d1878c2bc33c"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 70,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.37m
                        },
                        new
                        {
                            Id = new Guid("54feeda5-0fdc-4514-bc54-725c74f5b82a"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 100,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 2.22m
                        },
                        new
                        {
                            Id = new Guid("3000bfdf-ce97-4749-be6b-3dedf7677023"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 300,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.57m
                        },
                        new
                        {
                            Id = new Guid("cc304083-d65d-44c2-9b6f-af5d16a1b9c8"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 1500,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.50m
                        },
                        new
                        {
                            Id = new Guid("8493e6a9-fa8a-4ecd-9bcf-870169c0e540"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.47m
                        },
                        new
                        {
                            Id = new Guid("51785365-0b15-424c-bc01-e12ac21a45df"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("449fb9e9-5d9a-4008-9aac-efe58075e988"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 70,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.22m
                        },
                        new
                        {
                            Id = new Guid("8dc1d6d3-d0fc-4184-a7ea-b4d23f7278e8"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 100,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 2.08m
                        },
                        new
                        {
                            Id = new Guid("3940e739-b63f-4609-a30e-285d71fe66e3"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 300,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.43m
                        },
                        new
                        {
                            Id = new Guid("ae03140d-84d4-4dbd-a450-8bdaec438e46"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 1500,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.36m
                        },
                        new
                        {
                            Id = new Guid("50f09f4c-f9c9-4dfb-8e3f-03f3b9515aa3"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.33m
                        },
                        new
                        {
                            Id = new Guid("99c5d65d-e0e4-4492-b4e6-2e5b2cc6b247"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("8f7dcd9a-6e54-4fd6-9ef6-7688763a8b8f"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 70,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.08m
                        },
                        new
                        {
                            Id = new Guid("cfae4637-6006-4732-82e9-b14d95b83306"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 100,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 1.93m
                        },
                        new
                        {
                            Id = new Guid("15a9a8c2-fbf8-4e16-8309-5aa9c0a0b181"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 300,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.57m
                        },
                        new
                        {
                            Id = new Guid("fd5aa624-b492-4928-b020-d7933d552a61"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 1500,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.82m
                        },
                        new
                        {
                            Id = new Guid("99950430-ddd5-4044-9a97-20346fcb8569"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.82m
                        },
                        new
                        {
                            Id = new Guid("9c8663fe-0790-4664-aae0-be0a8321ba12"),
                            DistrictId = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("d81d00e2-06ec-4899-b172-72038cd37228"),
                            DistrictId = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("ef3be54c-80c1-4d2d-a8e5-c04743ed7b2f"),
                            DistrictId = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.43m
                        },
                        new
                        {
                            Id = new Guid("8be771e9-c04b-4554-b975-bf36539bf8ec"),
                            DistrictId = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("2c836e7e-fdd0-447c-939e-9832f8e9d22a"),
                            DistrictId = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("ffd3d7c6-a2e2-4fea-98e3-515720dbfc8e"),
                            DistrictId = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        },
                        new
                        {
                            Id = new Guid("29f88964-654b-421d-add5-883de55ff010"),
                            DistrictId = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("57772395-f575-40ef-840f-bb0ba60dc9e5"),
                            DistrictId = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("fc1c9878-59db-4115-b0a5-3937955a3247"),
                            DistrictId = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        },
                        new
                        {
                            Id = new Guid("ad42ead0-b4bd-480a-baf5-0329c9b5cf28"),
                            DistrictId = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("8d596924-2282-4548-8841-14df28aa538a"),
                            DistrictId = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("e720cdd1-3649-417d-bb65-35a40edcb3ee"),
                            DistrictId = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        },
                        new
                        {
                            Id = new Guid("bc079640-3a9a-4820-8e71-3c0acec7ac65"),
                            DistrictId = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("4187f4f8-6628-46ae-9e32-3f01ab7f37ec"),
                            DistrictId = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("9b07612e-b16f-4356-a37e-bb299be5c855"),
                            DistrictId = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("4ae5bbb0-7fa3-4df7-b8c8-31559f51343f"),
                            DistrictId = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("4b621157-5d8d-4f10-9cce-ff9dafb44baf"),
                            DistrictId = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("f519c316-77d7-4167-8235-320b4cf92319"),
                            DistrictId = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("82b1d78d-317c-4462-912c-1c38747ba012"),
                            DistrictId = new Guid("80ff3e90-dcb9-4bc3-9590-e3a2c331a0ec"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("50e05427-c69f-4bf5-bc62-fab8d79a2fff"),
                            DistrictId = new Guid("80ff3e90-dcb9-4bc3-9590-e3a2c331a0ec"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("39b62c5d-0740-4449-a12f-929410ea1edc"),
                            DistrictId = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("72541967-a09c-43e8-8cd3-1e9b01f726c0"),
                            DistrictId = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("5f7b7b5f-2939-4610-bcf8-88ba02062baf"),
                            DistrictId = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("5ef7bfb9-9c45-4b67-9532-301a86685c46"),
                            DistrictId = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("56ea86d7-34a0-4830-ad46-2a8ca6869ce6"),
                            DistrictId = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("7fd4b01e-d016-4f1f-a983-d1ba7be15103"),
                            DistrictId = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("61f8de64-56a6-42e4-83e1-64dd844d98d7"),
                            DistrictId = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("b0751ee0-8204-43f7-807e-a0f00db9d498"),
                            DistrictId = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("de082b14-2346-4fce-b78c-cae344438893"),
                            DistrictId = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("5804687f-4d4c-47f7-bfe3-5a8c6f466e09"),
                            DistrictId = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("eccfd794-5e64-4918-a617-aa841c2d5286"),
                            DistrictId = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("83d2e5b8-e838-44d0-9a0f-454821b475f6"),
                            DistrictId = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("a7cee56c-23f7-4423-a781-eb830992c220"),
                            DistrictId = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("ebe541c9-cfa2-4f54-91a9-959404b8a93b"),
                            DistrictId = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("e6eb4339-5393-4fe1-8c68-ef5715164afd"),
                            DistrictId = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("4038e705-8620-4790-9820-b6d8f29ef67f"),
                            DistrictId = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("b262f23e-f820-4cf6-9c4c-cf5690e8720e"),
                            DistrictId = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("46f82f6c-323f-4b6b-84ac-2bc4d1ddfdf1"),
                            DistrictId = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("191c253e-5eef-4c0e-b136-97fc9625c141"),
                            DistrictId = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("ac1a3f0d-a563-4104-8098-c5cbcee5f48e"),
                            DistrictId = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("1529196b-0a6e-421b-96bc-c82c2b3da98b"),
                            DistrictId = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("e21808f2-b8ad-417b-a8a3-019175fed510"),
                            DistrictId = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("ac66954b-8749-4eb5-b473-67374baafc26"),
                            DistrictId = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("f1c4c532-0a83-4939-b299-9aeceafdd84a"),
                            DistrictId = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("4e7da82b-e21f-477c-b541-69cbd0346abe"),
                            DistrictId = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("8e616f6a-286a-457f-8a54-37164119e0a2"),
                            DistrictId = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.40m
                        },
                        new
                        {
                            Id = new Guid("adabd934-95cc-4606-95f3-74ec6a3037e1"),
                            DistrictId = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.92m
                        },
                        new
                        {
                            Id = new Guid("7b757f39-3503-4913-bae7-3cc42f66f797"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 70,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.84m
                        },
                        new
                        {
                            Id = new Guid("3a26e929-0b63-464a-8b4f-5729de9f8a9c"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 100,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.70m
                        },
                        new
                        {
                            Id = new Guid("f74d1be7-fb25-4934-a158-5042b0e13538"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 300,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 2.06m
                        },
                        new
                        {
                            Id = new Guid("0b6706e8-7ff5-4390-b182-ec27b247d03e"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 1500,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.98m
                        },
                        new
                        {
                            Id = new Guid("10322e23-052f-44e8-81c4-046d65e133ef"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.95m
                        },
                        new
                        {
                            Id = new Guid("3f01fbab-24ba-41cf-abe3-62f9b4695e6a"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 70,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.70m
                        },
                        new
                        {
                            Id = new Guid("9c1e9f02-2b2d-47f2-a73e-70630abb98a0"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 100,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.55m
                        },
                        new
                        {
                            Id = new Guid("ff3eb7f3-770a-44bc-985c-081eb6d566e4"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 300,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.90m
                        },
                        new
                        {
                            Id = new Guid("835b908e-92bc-4b0a-a94f-d53d62879985"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 1500,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.83m
                        },
                        new
                        {
                            Id = new Guid("3275e172-5a98-4870-a52f-ea7adeb101a8"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.80m
                        },
                        new
                        {
                            Id = new Guid("a950d9ce-c547-4cf3-a4b3-6167014d4ada"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 70,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.55m
                        },
                        new
                        {
                            Id = new Guid("95a7dd82-5129-4563-b3e3-c70eaa1d9bf6"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 100,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.41m
                        },
                        new
                        {
                            Id = new Guid("faea4165-53ba-47e6-9dc7-84e802573026"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 300,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.76m
                        },
                        new
                        {
                            Id = new Guid("a39478c9-92c8-429d-8167-368fc2ac6cda"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 1500,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.69m
                        },
                        new
                        {
                            Id = new Guid("dc4ad423-a4b6-4dd0-b714-7010cfeaea7c"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.66m
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransportMethods", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            Enabled = true,
                            NameEn = "Air",
                            NameTr = "Uçak"
                        },
                        new
                        {
                            Id = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            Enabled = true,
                            NameEn = "Sea Slow + Express",
                            NameTr = "Yavaş Gemi + Ekspress"
                        },
                        new
                        {
                            Id = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            Enabled = true,
                            NameEn = "Sea Fast + Express",
                            NameTr = "Hızlı Gemi + Ekspress"
                        },
                        new
                        {
                            Id = new Guid("2add124b-9a78-4b78-96d1-523e658f77a4"),
                            Enabled = true,
                            NameEn = "Sea Slow + Truck",
                            NameTr = "Yavaş Gemi + TIR"
                        },
                        new
                        {
                            Id = new Guid("4f2febe8-3273-4086-89a4-0a0282f003a8"),
                            Enabled = true,
                            NameEn = "Sea Fast + Truck",
                            NameTr = "Hızlı Gemi + TIR"
                        },
                        new
                        {
                            Id = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            Enabled = true,
                            NameEn = "Fast Vessel",
                            NameTr = "Speed Boat"
                        },
                        new
                        {
                            Id = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            Enabled = true,
                            NameEn = "Truck",
                            NameTr = "TIR"
                        },
                        new
                        {
                            Id = new Guid("a5fe9692-ef46-4376-919f-43aeaa0c07a0"),
                            Enabled = true,
                            NameEn = "Railway",
                            NameTr = "Tren"
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OriginId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ShippingNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid>("TransportFeeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("OriginId");

                    b.HasIndex("TransportFeeId");

                    b.HasIndex("UserId");

                    b.ToTable("TransportOrders", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TransportOrderId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TransportOrderId");

                    b.ToTable("TransportOrderItems", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("TransportOrderItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportOrderItemContainerTypes", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AttachmentDescriptionEn")
                        .HasColumnType("longtext");

                    b.Property<string>("AttachmentDescriptionTr")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportOrderItemFeatures", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeatureValue", b =>
                {
                    b.Property<Guid>("TransportOrderItemFeatureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TransportOrderItemId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Attachment")
                        .HasColumnType("longtext");

                    b.HasKey("TransportOrderItemFeatureId", "TransportOrderItemId");

                    b.HasIndex("TransportOrderItemId");

                    b.ToTable("TransportOrderItemFeatureValue", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransportPayments", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDestination")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOrigin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransportRegions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            Enabled = true,
                            IsDestination = true,
                            IsOrigin = false,
                            NameEn = "USA",
                            NameTr = "ABD"
                        },
                        new
                        {
                            Id = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            Enabled = true,
                            IsDestination = true,
                            IsOrigin = false,
                            NameEn = "Canada",
                            NameTr = "Kanada"
                        },
                        new
                        {
                            Id = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            Enabled = true,
                            IsDestination = true,
                            IsOrigin = false,
                            NameEn = "UK",
                            NameTr = "İngiltere"
                        },
                        new
                        {
                            Id = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            Enabled = true,
                            IsDestination = true,
                            IsOrigin = false,
                            NameEn = "Europe",
                            NameTr = "Avrupa"
                        },
                        new
                        {
                            Id = new Guid("a524039f-30f6-4adf-8cd3-2e0859fd08ab"),
                            Enabled = true,
                            IsDestination = false,
                            IsOrigin = true,
                            NameEn = "China",
                            NameTr = "Çin"
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportRegionMethod", b =>
                {
                    b.Property<Guid>("MethodId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("ETAMax")
                        .HasColumnType("int");

                    b.Property<int?>("ETAMin")
                        .HasColumnType("int");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("MethodId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("TransportRegionMethod", (string)null);

                    b.HasData(
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("a5fe9692-ef46-4376-919f-43aeaa0c07a0"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportStaticPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContentTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LabelEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LabelTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransportStaticPages", (string)null);
                });

            modelBuilder.Entity("ShipbuData.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("RefreshToken")
                        .HasColumnType("char(36)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TransportOrderItemTransportOrderItemFeature", b =>
                {
                    b.Property<Guid>("TransportOrderItemFeaturesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TransportOrderItemsId")
                        .HasColumnType("char(36)");

                    b.HasKey("TransportOrderItemFeaturesId", "TransportOrderItemsId");

                    b.HasIndex("TransportOrderItemsId");

                    b.ToTable("TransportOrderItemTransportOrderItemFeature", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainer", b =>
                {
                    b.HasBaseType("ShipbuData.TransportOrderItem");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransportOrderItemContainerTypeId")
                        .HasColumnType("char(36)");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasIndex("TransportOrderItemContainerTypeId");

                    b.HasDiscriminator().HasValue("TransportOrderItemContainer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShipbuData.TransportDistrict", b =>
                {
                    b.HasOne("ShipbuData.TransportRegion", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ShipbuData.TransportFee", b =>
                {
                    b.HasOne("ShipbuData.TransportDistrict", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportMethod", "Method")
                        .WithMany()
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Method");
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.HasOne("ShipbuData.TransportDistrict", "District")
                        .WithMany("TransportOrders")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportRegion", "Origin")
                        .WithMany("TransportOrders")
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportFee", "TransportFee")
                        .WithMany("TransportOrders")
                        .HasForeignKey("TransportFeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShipbuData.User", "User")
                        .WithMany("TransportOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Origin");

                    b.Navigation("TransportFee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.HasOne("ShipbuData.TransportOrder", "TransportOrder")
                        .WithMany("TransportOrderItems")
                        .HasForeignKey("TransportOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportOrder");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeatureValue", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemFeature", "TransportOrderItemFeature")
                        .WithMany("TransportOrderItemFeatureValues")
                        .HasForeignKey("TransportOrderItemFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportOrderItem", "TransportOrderItem")
                        .WithMany("TransportOrderItemFeatureValues")
                        .HasForeignKey("TransportOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportOrderItem");

                    b.Navigation("TransportOrderItemFeature");
                });

            modelBuilder.Entity("ShipbuData.TransportPayment", b =>
                {
                    b.HasOne("ShipbuData.User", "User")
                        .WithMany("TransportPayments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShipbuData.TransportRegionMethod", b =>
                {
                    b.HasOne("ShipbuData.TransportMethod", "Method")
                        .WithMany("TransportRegionMethods")
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportRegion", "Region")
                        .WithMany("TransportRegionMethods")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("TransportOrderItemTransportOrderItemFeature", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemFeature", null)
                        .WithMany()
                        .HasForeignKey("TransportOrderItemFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportOrderItem", null)
                        .WithMany()
                        .HasForeignKey("TransportOrderItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TransportOrderItemTransportOrderItemFeature_TransportOrderI~1");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainer", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemContainerType", "TransportOrderItemContainerType")
                        .WithMany("TransportOrderItemContainers")
                        .HasForeignKey("TransportOrderItemContainerTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TransportOrderItemContainerType");
                });

            modelBuilder.Entity("ShipbuData.TransportDistrict", b =>
                {
                    b.Navigation("TransportOrders");
                });

            modelBuilder.Entity("ShipbuData.TransportFee", b =>
                {
                    b.Navigation("TransportOrders");
                });

            modelBuilder.Entity("ShipbuData.TransportMethod", b =>
                {
                    b.Navigation("TransportRegionMethods");
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.Navigation("TransportOrderItems");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.Navigation("TransportOrderItemFeatureValues");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainerType", b =>
                {
                    b.Navigation("TransportOrderItemContainers");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeature", b =>
                {
                    b.Navigation("TransportOrderItemFeatureValues");
                });

            modelBuilder.Entity("ShipbuData.TransportRegion", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("TransportOrders");

                    b.Navigation("TransportRegionMethods");
                });

            modelBuilder.Entity("ShipbuData.User", b =>
                {
                    b.Navigation("TransportOrders");

                    b.Navigation("TransportPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
