// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShipbuData;

#nullable disable

namespace MigrationsMySQL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240218194035_MigrationOrderStatus")]
    partial class MigrationOrderStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShipbuData.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportAcademyVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionTr")
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportAcademyVideos");
                });

            modelBuilder.Entity("ShipbuData.TransportDistrict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAmazonDepot")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("TransportDistricts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Eastern USA",
                            NameTr = "Doğu Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Central USA",
                            NameTr = "Merkez Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Western USA",
                            NameTr = "Batı Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "ONT8",
                            NameTr = "ONT8",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LGB8",
                            NameTr = "LGB8",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LAX9",
                            NameTr = "LAX9",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD1",
                            NameTr = "SBD1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SCK4",
                            NameTr = "SCK4",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SMF3",
                            NameTr = "SMF3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("80ff3e90-dcb9-4bc3-9590-e3a2c331a0ec"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "VGT3",
                            NameTr = "VGT2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "GYR2",
                            NameTr = "GYR2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "GYR3",
                            NameTr = "GYR3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LAS1",
                            NameTr = "LAS1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SJC7",
                            NameTr = "SJC7",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "KRB1",
                            NameTr = "KRB1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "KRB4",
                            NameTr = "KRB4",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD2",
                            NameTr = "SBD2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD3",
                            NameTr = "SBD3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "FTW1",
                            NameTr = "FTW1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("573da713-55b6-4505-9bb0-1e033f7c47e5"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Vancouver YVR",
                            NameTr = "Vancouver YVR",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("637a3cf8-e91a-4e46-8ccf-d1bfcbaa19e3"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Calgary YYC",
                            NameTr = "Calgary YYC",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("82060812-b989-4340-bd2e-8840585a8acf"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Calgary YEG",
                            NameTr = "Calgary YEG",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("545149ad-862b-4e00-a5d6-e3492d68463b"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YYZ",
                            NameTr = "Toronto YYZ",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("829f6814-b1a3-43f0-8d71-f2ea928e743b"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Ottawa YOW",
                            NameTr = "Ottawa YOW",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("ff9e1ee3-91cc-404f-ae3f-4a4c8ad891f7"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Ottawa YUL",
                            NameTr = "Ottawa YUL",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("431d73fb-827d-43c2-8ee3-98568d1cfcf8"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Bussiness Private Address",
                            NameTr = "Kurumsal/Bireysel Adres",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("9495dd9f-53c2-41c5-8680-34539a483a42"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Edmonton YEG1",
                            NameTr = "Edmonton YEG1",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("de1cfc73-52a1-4c72-aed7-1c67a588e436"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YOO",
                            NameTr = "Toronto YOO",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("bb88a4e3-a99f-45e4-a753-cb430b608a4f"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YHM",
                            NameTr = "Toronto YHM",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("a42ea92c-d563-4eb8-bd25-83a3ac1217dc"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Vancouver YXX",
                            NameTr = "Vancouver YXX",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("e7a610f5-1fe9-41e2-8493-34424d982b9b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "UK",
                            NameTr = "İngiltere",
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321")
                        },
                        new
                        {
                            Id = new Guid("cb7fa78d-6de7-4838-9e54-c279bea798b0"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Germany",
                            NameTr = "Almanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("78587899-2653-4be7-b07e-13a7596d5649"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "France",
                            NameTr = "Fransa",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e1371a95-daa6-4c22-8bcd-c86e5ee03203"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Poland",
                            NameTr = "Polonya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("cb39b0c9-34bb-4f55-a39b-a575aff157b2"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Czech Rep.",
                            NameTr = "Çekya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("660348c5-b814-42bf-a1b9-df56696f3c75"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Belgium",
                            NameTr = "Belçika",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("38df3f9b-f88b-4c6d-9a36-76fe0d3e1792"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Austria",
                            NameTr = "Avusturya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("8603813c-d724-4d63-8013-c273c9fe5fbc"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Luxembourg",
                            NameTr = "Lüksemburg",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("7ddb170b-5696-4abe-a5a8-b6424a966ba9"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Spain",
                            NameTr = "İspanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("8b08542b-6c77-4d8e-8d54-329ceec6c1e1"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Italy",
                            NameTr = "İtalya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("52e63491-43b4-47cc-b53e-8384aac7c07c"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Netherlands",
                            NameTr = "Hollanda",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("58a45e41-a7fe-4dec-9a8e-3bbf38455e5f"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Greece",
                            NameTr = "Yunanistan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("ee896fe1-1434-4136-a70e-d2c9fa49d902"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Denmark",
                            NameTr = "Danimarka",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("3c4fedcc-eaeb-4480-8574-c759e9aa2f9d"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Sweden",
                            NameTr = "İsveç",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("da5d4f5e-79ac-4b69-b0f5-cf027053ec8c"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Finland",
                            NameTr = "Fillandiya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("bc3767bc-68d7-400d-ae61-707fc3bb5878"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Slovakia",
                            NameTr = "Slovakya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("291c8b1e-1eb6-4bc0-b714-86e79ed31316"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Slovenia",
                            NameTr = "Slovenya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("6de69db5-e0a5-4fe3-95a9-df3721f50d0b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Hungary",
                            NameTr = "Macaristan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e7b21a66-1c15-49cf-9ff9-c8b3455ba57d"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Portugal",
                            NameTr = "Portekiz",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e7777c20-3abb-4a39-af05-11fcee8f7534"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Croatia",
                            NameTr = "Hırvatistan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("b93226d5-2642-4705-99ca-734af02c624b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Estonia",
                            NameTr = "Estonya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("da7b0a60-d6ca-44d4-9e28-d5d804cd7a64"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Latvia",
                            NameTr = "Latviya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("869993cb-ccd8-498f-880c-97f0e02f2846"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Bulgaria",
                            NameTr = "Bulgaristan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("18351822-a469-408c-b8a9-f17dbff1020a"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Monaco",
                            NameTr = "Monako",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("803e5fb5-2a8f-4e42-a544-071b0b9fcecf"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Ireland",
                            NameTr = "Irlanda",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("3a52e207-c517-49a2-98d4-2998f29f1ecd"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Romania",
                            NameTr = "Romanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportFee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("MaxWeight")
                        .HasColumnType("int");

                    b.Property<Guid>("MethodId")
                        .HasColumnType("char(36)");

                    b.Property<int>("MinWeight")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("MethodId");

                    b.ToTable("TransportFees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c9024ca-2728-4bbf-a983-67553b68e010"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("3da2229b-aa21-461d-a1bc-1d1728f1428f"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 70,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.37m
                        },
                        new
                        {
                            Id = new Guid("3731de7f-68a0-490c-84e4-11ca75f6436a"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 100,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 2.22m
                        },
                        new
                        {
                            Id = new Guid("d82a0f0c-8980-42f2-a01a-af8d83d00dca"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 300,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.57m
                        },
                        new
                        {
                            Id = new Guid("cf10f476-73d1-4197-b713-a0901cd46389"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 1500,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.50m
                        },
                        new
                        {
                            Id = new Guid("4b82f3ad-e1ae-4aa4-b46c-9c2bc68e171d"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.47m
                        },
                        new
                        {
                            Id = new Guid("edb0ca90-3d28-4d38-b64b-6e6628c4a335"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("591c0e47-ec7e-4c97-8dc5-e7fa9e727658"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 70,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.22m
                        },
                        new
                        {
                            Id = new Guid("d08accf9-d1cd-4cf0-a852-366f96dce894"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 100,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 2.08m
                        },
                        new
                        {
                            Id = new Guid("14df8f25-696e-4c73-a768-6464daece2a3"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 300,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.43m
                        },
                        new
                        {
                            Id = new Guid("51291fc5-4907-4c40-af41-7b58474a9f29"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 1500,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.36m
                        },
                        new
                        {
                            Id = new Guid("113a4a49-2de6-42cb-9fea-037db7d40371"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.33m
                        },
                        new
                        {
                            Id = new Guid("aef6a5e2-f454-4dc7-9384-dfc9b45970b8"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("ec681263-6c21-461f-a0c6-5de456c60a0a"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 70,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.08m
                        },
                        new
                        {
                            Id = new Guid("60a877df-e94f-4989-8d32-033cb7042f9d"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 100,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 1.93m
                        },
                        new
                        {
                            Id = new Guid("a0e8dd45-c473-48a5-a770-1dcfbe9264a7"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 300,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.57m
                        },
                        new
                        {
                            Id = new Guid("5398b742-2ead-47c8-9cbb-70299c88eeb1"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 1500,
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.82m
                        },
                        new
                        {
                            Id = new Guid("128a5046-d455-44ba-854d-0b50140a389d"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.82m
                        },
                        new
                        {
                            Id = new Guid("3ce5a985-d9f7-4013-a86d-ed70254efb85"),
                            DistrictId = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("88dfbf30-fed5-49a9-942c-99eaf6891c9e"),
                            DistrictId = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("5f1b8ce4-aa72-4050-85e0-acf846c64734"),
                            DistrictId = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.43m
                        },
                        new
                        {
                            Id = new Guid("1b1186d9-c666-4bd5-a447-f73de4164e13"),
                            DistrictId = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("efbe3cc2-b445-4d91-9f6a-e262f39595a7"),
                            DistrictId = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("ad66fa7f-d5e7-4d90-9b99-0f4e2fe076e7"),
                            DistrictId = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        },
                        new
                        {
                            Id = new Guid("8ee084a0-3367-4583-8b67-e016303a14a3"),
                            DistrictId = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("2d7345c6-7222-4ee2-ae79-88ef280ec07b"),
                            DistrictId = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("6a06cfbf-b184-4c83-9681-ec745e23446f"),
                            DistrictId = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        },
                        new
                        {
                            Id = new Guid("ac32ad44-36c9-46bc-925d-8d9c24f61a38"),
                            DistrictId = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("adf40af3-4702-4793-815f-6985d651f647"),
                            DistrictId = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("69fc8126-1213-4d89-84b4-5a2ad309179b"),
                            DistrictId = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        },
                        new
                        {
                            Id = new Guid("88c27a56-5f6c-432f-b0fb-9836f9fc9f90"),
                            DistrictId = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("3bc60ef8-8eb7-4850-ab14-240ebf130419"),
                            DistrictId = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("2b97a3bf-0bbd-43bc-8418-c176666a0c0e"),
                            DistrictId = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("51c77dab-04bf-4158-b65b-7a746588f84e"),
                            DistrictId = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("32e94740-601d-4bfb-9046-6cbaf484c9e9"),
                            DistrictId = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("0b899656-efe4-44f1-a4e9-455d9feaa0c7"),
                            DistrictId = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("8d911286-971b-4542-b35b-06bc804a23bc"),
                            DistrictId = new Guid("80ff3e90-dcb9-4bc3-9590-e3a2c331a0ec"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("c76ae9b8-4a1e-4dae-9333-964f61640b3b"),
                            DistrictId = new Guid("80ff3e90-dcb9-4bc3-9590-e3a2c331a0ec"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("2011b907-1435-41bc-b3dd-e6d30cb05ed7"),
                            DistrictId = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("46783a14-fcdb-4966-bab5-bbf899c87d6e"),
                            DistrictId = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("3d8c5990-d66e-4421-8a06-f2c741e128db"),
                            DistrictId = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("514484eb-b399-4e6a-a35b-ca8ea3002cd6"),
                            DistrictId = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("6063e5dc-2ee5-4b52-84e6-65e42a2cba06"),
                            DistrictId = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("c783d5ea-b4df-4e88-abba-60ff29f7a7c7"),
                            DistrictId = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("320a798f-8d3c-4bbf-a33f-7104f74663e2"),
                            DistrictId = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("b70e7fe3-539d-48b5-b79a-0be8a00245ca"),
                            DistrictId = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("42d696ce-f746-4c89-b8ab-ae421684eb4f"),
                            DistrictId = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.53m
                        },
                        new
                        {
                            Id = new Guid("a475d5e1-c793-4050-bba8-89f733da323a"),
                            DistrictId = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("8483d76c-afe3-458a-9921-5ac4b5835634"),
                            DistrictId = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("1c186316-dbb3-404a-b9d1-ed67fd849bcd"),
                            DistrictId = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("9228df16-0ef0-40ac-b77e-83093459edf8"),
                            DistrictId = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("853b4a9e-d808-4f00-a502-24c6df2c774c"),
                            DistrictId = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("5df7c554-6701-4642-ade6-cf1502498a7b"),
                            DistrictId = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("7dcd29d4-7095-4e6a-8f7e-f2d1c9373e37"),
                            DistrictId = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("be44e3a4-aead-4970-99fb-6c89a938de4b"),
                            DistrictId = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("688650f6-2980-460d-99dc-a54d29157ab5"),
                            DistrictId = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("b6912136-42a5-4923-96c1-de209e82dd6c"),
                            DistrictId = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("8b37cbed-056a-4763-9e9b-079af931730f"),
                            DistrictId = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("f05463e5-dd0e-49ed-b1dd-852d44176bfe"),
                            DistrictId = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("63db9e69-5055-461f-a917-1913dd913aa0"),
                            DistrictId = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("204b992f-b348-4c42-90d2-8a69b8077cc5"),
                            DistrictId = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("b5443eff-8b80-4212-834f-d7403e609eda"),
                            DistrictId = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.61m
                        },
                        new
                        {
                            Id = new Guid("cbcf2484-ab83-4a7b-8c19-9d4d0e776000"),
                            DistrictId = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            MinWeight = 0,
                            Value = 10m
                        },
                        new
                        {
                            Id = new Guid("745aa2d6-e023-467c-9f45-90a28826d107"),
                            DistrictId = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.40m
                        },
                        new
                        {
                            Id = new Guid("0ade6b8a-28eb-493d-bff4-47c8adadc4ff"),
                            DistrictId = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.92m
                        },
                        new
                        {
                            Id = new Guid("d5670043-8e01-4cf1-9bab-5dea4dda448d"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 70,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.84m
                        },
                        new
                        {
                            Id = new Guid("b4566d68-4a5f-4f4b-9700-4e1dbc089741"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 100,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.70m
                        },
                        new
                        {
                            Id = new Guid("f9202031-22af-430d-8d4c-dbd9da840096"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 300,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 2.06m
                        },
                        new
                        {
                            Id = new Guid("f4117770-a1d3-4f30-bcef-0a621772e006"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MaxWeight = 1500,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.98m
                        },
                        new
                        {
                            Id = new Guid("d1101f3b-31f5-4fc8-a48a-585ec29a6eed"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.95m
                        },
                        new
                        {
                            Id = new Guid("5ee2850f-b2be-4f53-b756-cca7895abd50"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 70,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.70m
                        },
                        new
                        {
                            Id = new Guid("9fa343b9-6cf7-4364-ab78-8ea53bcdc9ac"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 100,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.55m
                        },
                        new
                        {
                            Id = new Guid("2d06c458-4d8e-4c70-86f4-633316b3b0ca"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 300,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.90m
                        },
                        new
                        {
                            Id = new Guid("e4924b8d-a2e6-4465-ad6f-36860019e137"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MaxWeight = 1500,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.83m
                        },
                        new
                        {
                            Id = new Guid("4881251e-36bb-4719-8396-c632f4c8e9bb"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.80m
                        },
                        new
                        {
                            Id = new Guid("eb4128a9-123f-46a2-b305-f685dc5dacf0"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 70,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.55m
                        },
                        new
                        {
                            Id = new Guid("c2d1b315-71d0-4cc8-996b-424d502d14a1"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 100,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.41m
                        },
                        new
                        {
                            Id = new Guid("bd1f9f20-43f5-4ccb-a624-e08e2c1a6698"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 300,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.76m
                        },
                        new
                        {
                            Id = new Guid("5cb7b65c-a8b7-4dcc-99cb-ee3e13b48f9c"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MaxWeight = 1500,
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.69m
                        },
                        new
                        {
                            Id = new Guid("2d875e84-f0c6-489f-9ccd-bc3755c22523"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.66m
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransportMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            Enabled = true,
                            NameEn = "Air",
                            NameTr = "Uçak"
                        },
                        new
                        {
                            Id = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            Enabled = true,
                            NameEn = "Sea Slow + Express",
                            NameTr = "Yavaş Gemi + Ekspress"
                        },
                        new
                        {
                            Id = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            Enabled = true,
                            NameEn = "Sea Fast + Express",
                            NameTr = "Hızlı Gemi + Ekspress"
                        },
                        new
                        {
                            Id = new Guid("2add124b-9a78-4b78-96d1-523e658f77a4"),
                            Enabled = true,
                            NameEn = "Sea Slow + Truck",
                            NameTr = "Yavaş Gemi + TIR"
                        },
                        new
                        {
                            Id = new Guid("4f2febe8-3273-4086-89a4-0a0282f003a8"),
                            Enabled = true,
                            NameEn = "Sea Fast + Truck",
                            NameTr = "Hızlı Gemi + TIR"
                        },
                        new
                        {
                            Id = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            Enabled = true,
                            NameEn = "Fast Vessel",
                            NameTr = "Speed Boat"
                        },
                        new
                        {
                            Id = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            Enabled = true,
                            NameEn = "Truck",
                            NameTr = "TIR"
                        },
                        new
                        {
                            Id = new Guid("a5fe9692-ef46-4376-919f-43aeaa0c07a0"),
                            Enabled = true,
                            NameEn = "Railway",
                            NameTr = "Tren"
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OriginId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ShippingNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid>("TransportFeeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("OriginId");

                    b.HasIndex("TransportFeeId");

                    b.HasIndex("UserId");

                    b.ToTable("TransportOrders");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TransportOrderId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TransportOrderId");

                    b.ToTable("TransportOrderItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TransportOrderItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportOrderItemContainerTypes");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AttachmentDescriptionEn")
                        .HasColumnType("longtext");

                    b.Property<string>("AttachmentDescriptionTr")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportOrderItemFeatures");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeatureValue", b =>
                {
                    b.Property<Guid>("TransportOrderItemFeatureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TransportOrderItemId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Attachment")
                        .HasColumnType("longtext");

                    b.HasKey("TransportOrderItemFeatureId", "TransportOrderItemId");

                    b.HasIndex("TransportOrderItemId");

                    b.ToTable("TransportOrderItemFeatureValue");
                });

            modelBuilder.Entity("ShipbuData.TransportRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDestination")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOrigin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransportRegions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            Enabled = true,
                            IsDestination = true,
                            IsOrigin = false,
                            NameEn = "USA",
                            NameTr = "ABD"
                        },
                        new
                        {
                            Id = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            Enabled = true,
                            IsDestination = true,
                            IsOrigin = false,
                            NameEn = "Canada",
                            NameTr = "Kanada"
                        },
                        new
                        {
                            Id = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            Enabled = true,
                            IsDestination = true,
                            IsOrigin = false,
                            NameEn = "UK",
                            NameTr = "İngiltere"
                        },
                        new
                        {
                            Id = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            Enabled = true,
                            IsDestination = true,
                            IsOrigin = false,
                            NameEn = "Europe",
                            NameTr = "Avrupa"
                        },
                        new
                        {
                            Id = new Guid("a524039f-30f6-4adf-8cd3-2e0859fd08ab"),
                            Enabled = true,
                            IsDestination = false,
                            IsOrigin = true,
                            NameEn = "China",
                            NameTr = "Çin"
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportRegionMethod", b =>
                {
                    b.Property<Guid>("MethodId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("ETAMax")
                        .HasColumnType("int");

                    b.Property<int?>("ETAMin")
                        .HasColumnType("int");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("MethodId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("TransportRegionMethod");

                    b.HasData(
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("a5fe9692-ef46-4376-919f-43aeaa0c07a0"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAMax = 5,
                            ETAMin = 3,
                            Volume = 6000
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportStaticPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContentTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LabelEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LabelTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransportStaticPages");
                });

            modelBuilder.Entity("ShipbuData.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("RefreshToken")
                        .HasColumnType("char(36)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TransportOrderItemTransportOrderItemFeature", b =>
                {
                    b.Property<Guid>("TransportOrderItemFeaturesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TransportOrderItemsId")
                        .HasColumnType("char(36)");

                    b.HasKey("TransportOrderItemFeaturesId", "TransportOrderItemsId");

                    b.HasIndex("TransportOrderItemsId");

                    b.ToTable("TransportOrderItemTransportOrderItemFeature");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainer", b =>
                {
                    b.HasBaseType("ShipbuData.TransportOrderItem");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransportOrderItemContainerTypeId")
                        .HasColumnType("char(36)");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasIndex("TransportOrderItemContainerTypeId");

                    b.HasDiscriminator().HasValue("TransportOrderItemContainer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShipbuData.TransportDistrict", b =>
                {
                    b.HasOne("ShipbuData.TransportRegion", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ShipbuData.TransportFee", b =>
                {
                    b.HasOne("ShipbuData.TransportDistrict", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportMethod", "Method")
                        .WithMany()
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Method");
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.HasOne("ShipbuData.TransportDistrict", "District")
                        .WithMany("TransportOrders")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportRegion", "Origin")
                        .WithMany("TransportOrders")
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportFee", "TransportFee")
                        .WithMany("TransportOrders")
                        .HasForeignKey("TransportFeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShipbuData.User", "User")
                        .WithMany("TransportOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Origin");

                    b.Navigation("TransportFee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.HasOne("ShipbuData.TransportOrder", "TransportOrder")
                        .WithMany("TransportOrderItems")
                        .HasForeignKey("TransportOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportOrder");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeatureValue", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemFeature", "TransportOrderItemFeature")
                        .WithMany("TransportOrderItemFeatureValues")
                        .HasForeignKey("TransportOrderItemFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportOrderItem", "TransportOrderItem")
                        .WithMany("TransportOrderItemFeatureValues")
                        .HasForeignKey("TransportOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportOrderItem");

                    b.Navigation("TransportOrderItemFeature");
                });

            modelBuilder.Entity("ShipbuData.TransportRegionMethod", b =>
                {
                    b.HasOne("ShipbuData.TransportMethod", "Method")
                        .WithMany("TransportRegionMethods")
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportRegion", "Region")
                        .WithMany("TransportRegionMethods")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("TransportOrderItemTransportOrderItemFeature", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemFeature", null)
                        .WithMany()
                        .HasForeignKey("TransportOrderItemFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportOrderItem", null)
                        .WithMany()
                        .HasForeignKey("TransportOrderItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TransportOrderItemTransportOrderItemFeature_TransportOrderI~1");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainer", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemContainerType", "TransportOrderItemContainerType")
                        .WithMany("TransportOrderItemContainers")
                        .HasForeignKey("TransportOrderItemContainerTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TransportOrderItemContainerType");
                });

            modelBuilder.Entity("ShipbuData.TransportDistrict", b =>
                {
                    b.Navigation("TransportOrders");
                });

            modelBuilder.Entity("ShipbuData.TransportFee", b =>
                {
                    b.Navigation("TransportOrders");
                });

            modelBuilder.Entity("ShipbuData.TransportMethod", b =>
                {
                    b.Navigation("TransportRegionMethods");
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.Navigation("TransportOrderItems");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.Navigation("TransportOrderItemFeatureValues");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainerType", b =>
                {
                    b.Navigation("TransportOrderItemContainers");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeature", b =>
                {
                    b.Navigation("TransportOrderItemFeatureValues");
                });

            modelBuilder.Entity("ShipbuData.TransportRegion", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("TransportOrders");

                    b.Navigation("TransportRegionMethods");
                });

            modelBuilder.Entity("ShipbuData.User", b =>
                {
                    b.Navigation("TransportOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
