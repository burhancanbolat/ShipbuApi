// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShipbuData;

#nullable disable

namespace MigrationsMySQL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240108201049_Values")]
    partial class Values
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShipbuData.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ShipbuData.TransportAcademyVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionTr")
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportAcademyVideos");
                });

            modelBuilder.Entity("ShipbuData.TransportDistrict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAmazonDepot")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("TransportDistrict");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Eastern USA",
                            NameTr = "Doğu Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Central USA",
                            NameTr = "Merkez Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Western USA",
                            NameTr = "Batı Amerika",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "ONT8",
                            NameTr = "ONT8",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LGB8",
                            NameTr = "LGB8",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LAX9",
                            NameTr = "LAX9",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD1",
                            NameTr = "SBD1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SCK4",
                            NameTr = "SCK4",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SMF3",
                            NameTr = "SMF3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("80ff3e90-dcb9-4bc3-9590-e3a2c331a0ec"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "VGT3",
                            NameTr = "VGT2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "GYR2",
                            NameTr = "GYR2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "GYR3",
                            NameTr = "GYR3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "LAS1",
                            NameTr = "LAS1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SJC7",
                            NameTr = "SJC7",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "KRB1",
                            NameTr = "KRB1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "KRB4",
                            NameTr = "KRB4",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD2",
                            NameTr = "SBD2",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "SBD3",
                            NameTr = "SBD3",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "FTW1",
                            NameTr = "FTW1",
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa")
                        },
                        new
                        {
                            Id = new Guid("573da713-55b6-4505-9bb0-1e033f7c47e5"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Vancouver YVR",
                            NameTr = "Vancouver YVR",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("637a3cf8-e91a-4e46-8ccf-d1bfcbaa19e3"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Calgary YYC",
                            NameTr = "Calgary YYC",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("82060812-b989-4340-bd2e-8840585a8acf"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Calgary YEG",
                            NameTr = "Calgary YEG",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("545149ad-862b-4e00-a5d6-e3492d68463b"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YYZ",
                            NameTr = "Toronto YYZ",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("829f6814-b1a3-43f0-8d71-f2ea928e743b"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Ottawa YOW",
                            NameTr = "Ottawa YOW",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("ff9e1ee3-91cc-404f-ae3f-4a4c8ad891f7"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Ottawa YUL",
                            NameTr = "Ottawa YUL",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("431d73fb-827d-43c2-8ee3-98568d1cfcf8"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Bussiness Private Address",
                            NameTr = "Kurumsal/Bireysel Adres",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("9495dd9f-53c2-41c5-8680-34539a483a42"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Edmonton YEG1",
                            NameTr = "Edmonton YEG1",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("de1cfc73-52a1-4c72-aed7-1c67a588e436"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YOO",
                            NameTr = "Toronto YOO",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("bb88a4e3-a99f-45e4-a753-cb430b608a4f"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Toronto YHM",
                            NameTr = "Toronto YHM",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("a42ea92c-d563-4eb8-bd25-83a3ac1217dc"),
                            Enabled = true,
                            IsAmazonDepot = true,
                            NameEn = "Vancouver YXX",
                            NameTr = "Vancouver YXX",
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f")
                        },
                        new
                        {
                            Id = new Guid("e7a610f5-1fe9-41e2-8493-34424d982b9b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "UK",
                            NameTr = "İngiltere",
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321")
                        },
                        new
                        {
                            Id = new Guid("cb7fa78d-6de7-4838-9e54-c279bea798b0"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Germany",
                            NameTr = "Almanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("78587899-2653-4be7-b07e-13a7596d5649"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "France",
                            NameTr = "Fransa",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e1371a95-daa6-4c22-8bcd-c86e5ee03203"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Poland",
                            NameTr = "Polonya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("cb39b0c9-34bb-4f55-a39b-a575aff157b2"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Czech Rep.",
                            NameTr = "Çekya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("660348c5-b814-42bf-a1b9-df56696f3c75"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Belgium",
                            NameTr = "Belçika",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("38df3f9b-f88b-4c6d-9a36-76fe0d3e1792"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Austria",
                            NameTr = "Avusturya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("8603813c-d724-4d63-8013-c273c9fe5fbc"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Luxembourg",
                            NameTr = "Lüksemburg",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("7ddb170b-5696-4abe-a5a8-b6424a966ba9"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Spain",
                            NameTr = "İspanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("8b08542b-6c77-4d8e-8d54-329ceec6c1e1"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Italy",
                            NameTr = "İtalya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("52e63491-43b4-47cc-b53e-8384aac7c07c"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Netherlands",
                            NameTr = "Hollanda",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("58a45e41-a7fe-4dec-9a8e-3bbf38455e5f"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Greece",
                            NameTr = "Yunanistan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("ee896fe1-1434-4136-a70e-d2c9fa49d902"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Denmark",
                            NameTr = "Danimarka",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("3c4fedcc-eaeb-4480-8574-c759e9aa2f9d"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Sweden",
                            NameTr = "İsveç",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("da5d4f5e-79ac-4b69-b0f5-cf027053ec8c"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Finland",
                            NameTr = "Fillandiya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("bc3767bc-68d7-400d-ae61-707fc3bb5878"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Slovakia",
                            NameTr = "Slovakya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("291c8b1e-1eb6-4bc0-b714-86e79ed31316"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Slovenia",
                            NameTr = "Slovenya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("6de69db5-e0a5-4fe3-95a9-df3721f50d0b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Hungary",
                            NameTr = "Macaristan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e7b21a66-1c15-49cf-9ff9-c8b3455ba57d"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Portugal",
                            NameTr = "Portekiz",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("e7777c20-3abb-4a39-af05-11fcee8f7534"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Croatia",
                            NameTr = "Hırvatistan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("b93226d5-2642-4705-99ca-734af02c624b"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Estonia",
                            NameTr = "Estonya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("da7b0a60-d6ca-44d4-9e28-d5d804cd7a64"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Latvia",
                            NameTr = "Latviya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("869993cb-ccd8-498f-880c-97f0e02f2846"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Bulgaria",
                            NameTr = "Bulgaristan",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("18351822-a469-408c-b8a9-f17dbff1020a"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Monaco",
                            NameTr = "Monako",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("803e5fb5-2a8f-4e42-a544-071b0b9fcecf"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Ireland",
                            NameTr = "Irlanda",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        },
                        new
                        {
                            Id = new Guid("3a52e207-c517-49a2-98d4-2998f29f1ecd"),
                            Enabled = true,
                            IsAmazonDepot = false,
                            NameEn = "Romania",
                            NameTr = "Romanya",
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883")
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportFee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MethodId")
                        .HasColumnType("char(36)");

                    b.Property<int>("MinWeight")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("MethodId");

                    b.ToTable("TransportFee");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50d0ff3d-ea78-4b87-9ec0-a69f45d3a0b6"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.37m
                        },
                        new
                        {
                            Id = new Guid("e680a11d-4f8f-4211-95ae-99b542264fe4"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 2.22m
                        },
                        new
                        {
                            Id = new Guid("2a57f44a-ddd2-4f67-bbb9-65f7af95d254"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.57m
                        },
                        new
                        {
                            Id = new Guid("e6716f98-205a-4e65-847b-6c2cb48cb57b"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.50m
                        },
                        new
                        {
                            Id = new Guid("14f02df5-71f2-44ed-be64-caa1ebc8db3b"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.47m
                        },
                        new
                        {
                            Id = new Guid("ab12d112-3f2a-4bf7-96f2-473e0c837a0c"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.22m
                        },
                        new
                        {
                            Id = new Guid("b9660b08-4899-476b-95c7-1d90cb04cf77"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 2.08m
                        },
                        new
                        {
                            Id = new Guid("8fe04e63-e8d9-4a93-b73b-22b1ecac5cf7"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.43m
                        },
                        new
                        {
                            Id = new Guid("af2e3dae-28f6-479a-b34a-5a2bb5eb6678"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.36m
                        },
                        new
                        {
                            Id = new Guid("47384446-8e41-46ea-bacd-6cc5c12a2855"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.33m
                        },
                        new
                        {
                            Id = new Guid("93b8dbff-a28b-4c68-b215-187d47823a4e"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 23,
                            Value = 2.08m
                        },
                        new
                        {
                            Id = new Guid("bf3dbdd2-e2b8-4236-82c7-0778ddf7e6f0"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 71,
                            Value = 1.93m
                        },
                        new
                        {
                            Id = new Guid("b388d4b3-2583-4193-a5cb-72df686459c8"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.57m
                        },
                        new
                        {
                            Id = new Guid("4e3cdf4e-9aec-4280-8f0b-9687adb4e878"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 301,
                            Value = 1.82m
                        },
                        new
                        {
                            Id = new Guid("9b90531b-1a8d-45a6-9707-35f416a2b0af"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 1501,
                            Value = 1.82m
                        },
                        new
                        {
                            Id = new Guid("1802b5f9-58e6-4d1e-8e82-73b1e535d5ec"),
                            DistrictId = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("5990ac38-7703-4ef7-bfab-3074f9095987"),
                            DistrictId = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("55f57ee4-298d-4677-a4d3-a00ee87f0164"),
                            DistrictId = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("f249a953-ebdd-4497-a485-495789c15d0a"),
                            DistrictId = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.87m
                        },
                        new
                        {
                            Id = new Guid("2580f783-661e-4a5a-98c3-c44ea8379f7c"),
                            DistrictId = new Guid("6d332a8f-0bcd-4b81-9c59-6965f4ab40ae"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("579d4237-a1a9-4b3b-b353-7f97374f581b"),
                            DistrictId = new Guid("76adc0f7-ac5d-43cd-9983-eae135865030"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("94f70b4b-1da0-4acb-95a6-6de2dcc84087"),
                            DistrictId = new Guid("80ff3e90-dcb9-4bc3-9590-e3a2c331a0ec"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.00m
                        },
                        new
                        {
                            Id = new Guid("64685eb3-da0f-49f4-84e4-78da3f2e9adf"),
                            DistrictId = new Guid("72516348-d8e7-4ce3-af4e-f97b77897f89"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("90bb9331-c7f0-4c9b-b29f-3e0e25ac88c9"),
                            DistrictId = new Guid("5f0411d9-fc63-4dd4-a03f-50c26f0829c6"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("7b46f5e4-78ac-44b7-b8a3-9bfc8fe98aac"),
                            DistrictId = new Guid("76e0d1b5-4fb7-4dc7-bcb1-1fadff9acc92"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 0.97m
                        },
                        new
                        {
                            Id = new Guid("f85351bd-fc30-4232-9a7d-6d0f75f3fd19"),
                            DistrictId = new Guid("123a8e96-b5f2-4459-a896-da06599036cf"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("c2deed51-b961-46e3-aef0-3f0792fbd41d"),
                            DistrictId = new Guid("98ead996-828c-4a6f-99c2-914b7c8110ef"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("8b4f2048-6fb2-40cd-a0cc-11950b3283aa"),
                            DistrictId = new Guid("5abcb711-259a-48dc-9817-2e5b988d690a"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("6e2ede54-f979-452c-92fb-f61d535f545a"),
                            DistrictId = new Guid("b90943d8-f764-42d3-8fca-da1ba2378634"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("9654ae1c-2fd4-41b6-9262-9a78f4d975f8"),
                            DistrictId = new Guid("6d63584c-813f-48de-9b19-df143f83d2f7"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.17m
                        },
                        new
                        {
                            Id = new Guid("f3324683-89dd-4aed-b26f-19ff27a536ee"),
                            DistrictId = new Guid("d484cf5d-d07d-4e01-8aa4-c87747fa68fe"),
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            MinWeight = 101,
                            Value = 1.40m
                        },
                        new
                        {
                            Id = new Guid("fbc47c70-8bf6-4f8c-a73b-e10bfcaa50eb"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.84m
                        },
                        new
                        {
                            Id = new Guid("978b8e30-a2cf-491e-b350-8709e56c9545"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.70m
                        },
                        new
                        {
                            Id = new Guid("96aec6fe-80a3-4373-b71a-6d6011fde0b4"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 2.06m
                        },
                        new
                        {
                            Id = new Guid("f2a960e2-0d21-41d7-8be8-4fa324cd46d5"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.98m
                        },
                        new
                        {
                            Id = new Guid("10a4964b-0e4c-43ee-896d-ec377a80db04"),
                            DistrictId = new Guid("05bb9082-20a8-4114-946b-cce72cedab19"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.95m
                        },
                        new
                        {
                            Id = new Guid("bfb0b85f-e21d-4b78-af01-77b0e69427bd"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.70m
                        },
                        new
                        {
                            Id = new Guid("867bf9f2-478e-49b9-be55-44ec378edce9"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.55m
                        },
                        new
                        {
                            Id = new Guid("4d7990d2-9bd1-4331-afa5-ee2fd1031136"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.90m
                        },
                        new
                        {
                            Id = new Guid("a0bca75d-678d-4e60-8f76-73fcbd0d7b0d"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.83m
                        },
                        new
                        {
                            Id = new Guid("50e3cf59-0372-4403-81f4-e460fcd2a20d"),
                            DistrictId = new Guid("0c02aa0a-b0d4-477a-b4e9-0a5073d323bf"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.80m
                        },
                        new
                        {
                            Id = new Guid("368bbba9-1e48-4a69-ba46-3c66b9e375ef"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 23,
                            Value = 2.55m
                        },
                        new
                        {
                            Id = new Guid("39122789-4544-4340-8114-9ac0bd30c84e"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 71,
                            Value = 2.41m
                        },
                        new
                        {
                            Id = new Guid("aadaaef7-62b3-4266-a995-8756301da2eb"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.76m
                        },
                        new
                        {
                            Id = new Guid("654993a4-4eae-4dd9-9376-1677f9118640"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 301,
                            Value = 1.69m
                        },
                        new
                        {
                            Id = new Guid("9f2da2d4-78c0-4d57-b0d3-27d070f20822"),
                            DistrictId = new Guid("34e425db-ff6c-4ab7-ac14-a1bd7a7c94a8"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 1501,
                            Value = 1.66m
                        },
                        new
                        {
                            Id = new Guid("c0a50b68-7d28-4751-8932-8c95b674f1c3"),
                            DistrictId = new Guid("2b26b58b-050c-46a7-8567-2325c31fa6fb"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.43m
                        },
                        new
                        {
                            Id = new Guid("38a018b1-b001-4248-8f9e-320121150f23"),
                            DistrictId = new Guid("3bf2da8a-0a2c-4a8f-99c9-35742cb7fa2e"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        },
                        new
                        {
                            Id = new Guid("76befa43-33ce-405e-9ab7-900b6b4716c8"),
                            DistrictId = new Guid("dbe61b00-89ef-493c-8930-9d41a402a987"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        },
                        new
                        {
                            Id = new Guid("a65498e7-1afe-4f90-bf1c-a63ef43e8b8d"),
                            DistrictId = new Guid("ccd6ecfe-c907-4777-96ad-40ab41b7ac06"),
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            MinWeight = 101,
                            Value = 1.46m
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransportMethod");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            Enabled = true,
                            NameEn = "Air",
                            NameTr = "Uçak"
                        },
                        new
                        {
                            Id = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            Enabled = true,
                            NameEn = "Sea Slow",
                            NameTr = "Yavaş Gemi"
                        },
                        new
                        {
                            Id = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            Enabled = true,
                            NameEn = "Sea Fast",
                            NameTr = "Hızlı Gemi"
                        },
                        new
                        {
                            Id = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            Enabled = true,
                            NameEn = "Fast Vessel",
                            NameTr = "Speed Boat"
                        },
                        new
                        {
                            Id = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            Enabled = true,
                            NameEn = "Truck",
                            NameTr = "TIR"
                        },
                        new
                        {
                            Id = new Guid("a5fe9692-ef46-4376-919f-43aeaa0c07a0"),
                            Enabled = true,
                            NameEn = "Railway",
                            NameTr = "Tren"
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransportOrders");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("varchar(34)");

                    b.Property<Guid>("TransportOrderId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TransportOrderId");

                    b.ToTable("TransportOrderItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TransportOrderItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportOrderItemContainerTypes");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AttachmentDescriptionEn")
                        .HasColumnType("longtext");

                    b.Property<string>("AttachmentDescriptionTr")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.HasIndex("NameTr")
                        .IsUnique();

                    b.ToTable("TransportOrderItemFeatures");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeatureValue", b =>
                {
                    b.Property<Guid>("TransportOrderItemFeatureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TransportOrderItemId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Attachment")
                        .HasColumnType("longtext");

                    b.HasKey("TransportOrderItemFeatureId", "TransportOrderItemId");

                    b.HasIndex("TransportOrderItemId");

                    b.ToTable("TransportOrderItemFeatureValue");
                });

            modelBuilder.Entity("ShipbuData.TransportRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransportRegion");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            Enabled = true,
                            NameEn = "USA",
                            NameTr = "ABD"
                        },
                        new
                        {
                            Id = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            Enabled = true,
                            NameEn = "Canada",
                            NameTr = "Kanada"
                        },
                        new
                        {
                            Id = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            Enabled = true,
                            NameEn = "UK",
                            NameTr = "İngiltere"
                        },
                        new
                        {
                            Id = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            Enabled = true,
                            NameEn = "Europe",
                            NameTr = "Avrupa"
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportRegionMethod", b =>
                {
                    b.Property<Guid>("MethodId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ETAEn")
                        .HasColumnType("longtext");

                    b.Property<string>("ETATr")
                        .HasColumnType("longtext");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("MethodId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("TransportRegionMethod");

                    b.HasData(
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAEn = "3 days",
                            ETATr = "3 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAEn = "30-35 days",
                            ETATr = "30-35 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            RegionId = new Guid("c194434c-7a4d-4d70-98df-1ecc78a333aa"),
                            ETAEn = "18-22 days",
                            ETATr = "18-22 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAEn = "3 days",
                            ETATr = "3 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAEn = "45-50 days",
                            ETATr = "45-50 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("cbf432c2-fd9e-4618-9b8f-60be075beef1"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAEn = "35-40 days",
                            ETATr = "35-40 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("730cd01e-fb25-4347-8932-2b4056252e73"),
                            RegionId = new Guid("aaaa0d64-abd7-4e96-aa49-35d4253e014f"),
                            ETAEn = "25-28 days",
                            ETATr = "25-28 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAEn = "3 days",
                            ETATr = "3 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAEn = "38-40 days",
                            ETATr = "38-40 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            RegionId = new Guid("5d751653-be94-44f4-afbe-5baf410ae321"),
                            ETAEn = "25-30 days",
                            ETATr = "25-30 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("7875cc3c-a338-480a-98d8-8d3296575000"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAEn = "3 days",
                            ETATr = "3 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("96e1ef5b-916c-4885-ae5b-08a98541e92a"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAEn = "40-45 days",
                            ETATr = "40-45 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("a5fe9692-ef46-4376-919f-43aeaa0c07a0"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAEn = "35-38 days",
                            ETATr = "35-38 gün",
                            Volume = 6000
                        },
                        new
                        {
                            MethodId = new Guid("af3e3b1a-06d9-413f-99ad-3378458be832"),
                            RegionId = new Guid("39887e51-8a46-42c1-b621-699d96326883"),
                            ETAEn = "22-28 days",
                            ETATr = "22-28 gün",
                            Volume = 6000
                        });
                });

            modelBuilder.Entity("ShipbuData.TransportStaticPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContentTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LabelEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LabelTr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TransportStaticPages");
                });

            modelBuilder.Entity("ShipbuData.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("RefreshToken")
                        .HasColumnType("char(36)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TransportOrderItemTransportOrderItemFeature", b =>
                {
                    b.Property<Guid>("TransportOrderItemFeaturesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TransportOrderItemsId")
                        .HasColumnType("char(36)");

                    b.HasKey("TransportOrderItemFeaturesId", "TransportOrderItemsId");

                    b.HasIndex("TransportOrderItemsId");

                    b.ToTable("TransportOrderItemTransportOrderItemFeature");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainer", b =>
                {
                    b.HasBaseType("ShipbuData.TransportOrderItem");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransportOrderItemContainerTypeId")
                        .HasColumnType("char(36)");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasIndex("TransportOrderItemContainerTypeId");

                    b.HasDiscriminator().HasValue("TransportOrderItemContainer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ShipbuData.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShipbuData.TransportDistrict", b =>
                {
                    b.HasOne("ShipbuData.TransportRegion", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ShipbuData.TransportFee", b =>
                {
                    b.HasOne("ShipbuData.TransportDistrict", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportMethod", "Method")
                        .WithMany()
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Method");
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.HasOne("ShipbuData.User", "User")
                        .WithMany("TransportOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.HasOne("ShipbuData.TransportOrder", "TransportOrder")
                        .WithMany("TransportOrderItems")
                        .HasForeignKey("TransportOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportOrder");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeatureValue", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemFeature", "TransportOrderItemFeature")
                        .WithMany("TransportOrderItemFeatureValues")
                        .HasForeignKey("TransportOrderItemFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportOrderItem", "TransportOrderItem")
                        .WithMany("TransportOrderItemFeatureValues")
                        .HasForeignKey("TransportOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportOrderItem");

                    b.Navigation("TransportOrderItemFeature");
                });

            modelBuilder.Entity("ShipbuData.TransportRegionMethod", b =>
                {
                    b.HasOne("ShipbuData.TransportMethod", "Method")
                        .WithMany("TransportRegionMethods")
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportRegion", "Region")
                        .WithMany("TransportRegionMethods")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("TransportOrderItemTransportOrderItemFeature", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemFeature", null)
                        .WithMany()
                        .HasForeignKey("TransportOrderItemFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipbuData.TransportOrderItem", null)
                        .WithMany()
                        .HasForeignKey("TransportOrderItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TransportOrderItemTransportOrderItemFeature_TransportOrderI~1");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainer", b =>
                {
                    b.HasOne("ShipbuData.TransportOrderItemContainerType", "TransportOrderItemContainerType")
                        .WithMany("TransportOrderItemContainers")
                        .HasForeignKey("TransportOrderItemContainerTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TransportOrderItemContainerType");
                });

            modelBuilder.Entity("ShipbuData.TransportMethod", b =>
                {
                    b.Navigation("TransportRegionMethods");
                });

            modelBuilder.Entity("ShipbuData.TransportOrder", b =>
                {
                    b.Navigation("TransportOrderItems");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItem", b =>
                {
                    b.Navigation("TransportOrderItemFeatureValues");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemContainerType", b =>
                {
                    b.Navigation("TransportOrderItemContainers");
                });

            modelBuilder.Entity("ShipbuData.TransportOrderItemFeature", b =>
                {
                    b.Navigation("TransportOrderItemFeatureValues");
                });

            modelBuilder.Entity("ShipbuData.TransportRegion", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("TransportRegionMethods");
                });

            modelBuilder.Entity("ShipbuData.User", b =>
                {
                    b.Navigation("TransportOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
